@import "breakpoint";

html {
    box-sizing: border-box;
    -ms-overflow-style: scrollbar;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

.container {
    padding-left: 15px;
    padding-right: 15px;
    max-width: 1200px;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -15px;
    margin-left: -15px;

    &.no-gutters {
        margin-right: 0;
        margin-left: 0;

        > .col,
        > [class*="col-"] {
            padding-right: 0;
            padding-left: 0;
        }
    }
}

%grid-column {
    position: relative;
    width: 100%;
    padding-right: 15px;
    padding-left: 15px;
}

@each $breakpoint in map-keys($breakpoints) {
    $device_name: breakpoint-name($breakpoint, $breakpoints);

    @if $columns > 0 {
        // Allow columns to stretch full width below their breakpoints
        @for $i from 1 through $columns {
            .col#{$device_name}-#{$i} {
                @extend %grid-column;
            }
        }
    }

    .col#{$device_name},
    .col#{$device_name}-auto {
        @extend %grid-column;
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
        .col#{$device_name} {
            flex-basis: 0;
            flex-grow: 1;
            max-width: 100%;
        }

        .col#{$device_name}-auto {
            flex: 0 0 auto;
            width: auto;
            max-width: 100%;
        }

        @if $columns > 0 {
            @for $i from 1 through $columns {
                .col#{$device_name}-#{$i} {
                    flex: 0 0 percentage($i / $columns);
                    max-width: percentage($i / $columns);
                }
            }
        }

        .order#{$device_name}-first {
            order: -1;
        }

        .order#{$device_name}-last {
            order: $columns + 1;
        }

        @for $i from 0 through $columns {
            .order#{$device_name}-#{$i} {
                order: $i;
            }
        }

        @if $columns > 0 {
            @for $i from 0 through ($columns - 1) {
                @if not($device_name == "" and $i == 0) {
                    .offset#{$device_name}-#{$i} {
                        $num: $i / $columns;
                        margin-left: if($num == 0, 0, percentage($num));
                    }
                }
            }
        }
    }
}

@each $breakpoint in map-keys($breakpoints) {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
        $device_name: breakpoint-name($breakpoint, $breakpoints);

        .flex#{$device_name}-row {
            flex-direction: row;
        }
        .flex#{$device_name}-column {
            flex-direction: column;
        }
        .flex#{$device_name}-row-reverse {
            flex-direction: row-reverse;
        }
        .flex#{$device_name}-column-reverse {
            flex-direction: column-reverse;
        }

        .flex#{$device_name}-wrap {
            flex-wrap: wrap;
        }
        .flex#{$device_name}-nowrap {
            flex-wrap: nowrap;
        }
        .flex#{$device_name}-wrap-reverse {
            flex-wrap: wrap-reverse;
        }
        .flex#{$device_name}-fill {
            flex: 1 1 auto;
        }
        .flex#{$device_name}-grow-0 {
            flex-grow: 0;
        }
        .flex#{$device_name}-grow-1 {
            flex-grow: 1;
        }
        .flex#{$device_name}-shrink-0 {
            flex-shrink: 0;
        }
        .flex#{$device_name}-shrink-1 {
            flex-shrink: 1;
        }

        .justify-content#{$device_name}-start {
            justify-content: flex-start;
        }
        .justify-content#{$device_name}-end {
            justify-content: flex-end;
        }
        .justify-content#{$device_name}-center {
            justify-content: center;
        }
        .justify-content#{$device_name}-between {
            justify-content: space-between;
        }
        .justify-content#{$device_name}-around {
            justify-content: space-around;
        }

        .align-items#{$device_name}-start {
            align-items: flex-start;
        }
        .align-items#{$device_name}-end {
            align-items: flex-end;
        }
        .align-items#{$device_name}-center {
            align-items: center;
        }
        .align-items#{$device_name}-baseline {
            align-items: baseline;
        }
        .align-items#{$device_name}-stretch {
            align-items: stretch;
        }

        .align-content#{$device_name}-start {
            align-content: flex-start;
        }
        .align-content#{$device_name}-end {
            align-content: flex-end;
        }
        .align-content#{$device_name}-center {
            align-content: center;
        }
        .align-content#{$device_name}-between {
            align-content: space-between;
        }
        .align-content#{$device_name}-around {
            align-content: space-around;
        }
        .align-content#{$device_name}-stretch {
            align-content: stretch;
        }

        .align-self#{$device_name}-auto {
            align-self: auto;
        }
        .align-self#{$device_name}-start {
            align-self: flex-start;
        }
        .align-self#{$device_name}-end {
            align-self: flex-end;
        }
        .align-self#{$device_name}-center {
            align-self: center;
        }
        .align-self#{$device_name}-baseline {
            align-self: baseline;
        }
        .align-self#{$device_name}-stretch {
            align-self: stretch;
        }
    }
}

@each $breakpoint in map-keys($breakpoints) {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
        $device_name: breakpoint-name($breakpoint, $breakpoints);

        @each $value in $displays {
            .d#{$device_name}-#{$value} {
                display: $value;
            }
        }
    }
}
